using System.Collections;
using System.Collections.Generic;
using UnityEngine;

// This script is responsible for the player character functionality. The movement and animator code is taken from: https://www.youtube.com/watch?v=whzomFgjT50 

public class PlayerControl : MonoBehaviour
{
    // These variables are here to make them easily accessible in the inspector. 
    [SerializeField] private float movementSpeed = 2f; // Stores the movement speed variable.
    [SerializeField] public bool visible = false; // Stores if the player is currently in light. This is accessed by the guard scripts to check if they spot the player.
    [SerializeField] public bool spotted = false; // Stores if the player is spotted by a guard. Used to stop the player from moving if they were noticed.

    private Rigidbody2D PCRigidbody; // Stores the Rigidbody2D component
    private Animator animator; // Stores the Animator component
    private SpriteRenderer spriteRenderer; // Stores the SpriteRenderer component
    private Vector2 movementDirection; // A vector used to move the player character

    // Start is called before the first frame update
    void Start()
    {
        PCRigidbody = GetComponent<Rigidbody2D>(); // Finds and stores the Rigidbody component in the variable
        animator = GetComponent<Animator>(); // Finds and stores the Animator component in the variable
        spriteRenderer = GetComponent<SpriteRenderer>(); // Finds and sores the SpriteRenderer component
    }

    // Update is called once per frame
    void Update()
    {
        movementDirection = new Vector2(Input.GetAxis("Horizontal"), Input.GetAxis("Vertical")); // Stores the current user movement inputs as a vector
        movementDirection.Normalize(); // The stored vector is normalized


        // The next 3 lines are used to set variables within the animator. These variables are needed to display the correct animation.
        animator.SetFloat("Horizontal", movementDirection.x);
        animator.SetFloat("Vertical", movementDirection.y);
        animator.SetFloat("Speed", movementDirection.sqrMagnitude);
    }

    private void FixedUpdate()
    {
        // First, it checks if the player has been spotted. If they haven't, the player character will move according to inputs.
        if (!spotted) 
        {
            // The next line will move the player character to a new position according to the vecotor generated by the inputs. More can be read about this method here: https://docs.unity3d.com/ScriptReference/Rigidbody2D.MovePosition.html
            PCRigidbody.MovePosition(PCRigidbody.position + (movementDirection * movementSpeed) * Time.fixedDeltaTime);

            // These lines are used to display the character sprite correctly, if the player is moving to the left. 
            if (movementDirection.x < 0)
            {
                spriteRenderer.flipX = true;
            }
            else
            {
                spriteRenderer.flipX = false;
            }
        } 
    }

    // This is used to check if the player is standing in light.
    private void OnTriggerStay2D(Collider2D collision)
    {
        if (collision.CompareTag("Light"))
        {
            visible = true;
        }
    }

    // This is used to flip the boolean used to check if the character is in light to off, when they leave the light.
    private void OnTriggerExit2D(Collider2D collision)
    {
        visible = false;
    }
}
